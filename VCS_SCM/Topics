[Add]
It is used to add file contents to the Index (Staging Area) from Working Directory.
The git add command can be run many times before making a commit.
These all add operations can be put under one commit.

[Branch]
If add a new feature or fix a bug, spawn a new branch to summarize changes.

[Commit]
It is used to record the changes in the repository.

[Checkout]
It is used to switch between branches in a repository.
The git checkout command operates upon three different entities which are files, commits and branches.

[Clone]
It is the act of making a copy of any target repository.
It can clone your repository from the remote repository to create a local copy on your system.

[Init]
It is used to create a new blank repository.
It is used to make an existing project as a Git project.
Several Git commands run inside the repository, but init command can be run outside of the repository.
It creates a .git subdirectory in the current Working Directory.
It newly created subdirectory contains all of the necessary metadata.

[Log]
It is a record of commits.
COMMIT_ID = It is a 40 character checksum data generated by SHA (Secure Hash Algorithm) algorithm. It is a unique number.
Author = The information of authors such as author name and email.
Date = It a date timestamp for the time of the commit.
COMMIT_MESSAGE = It is the overview of the commit given in the commit message.
If run the git log command and stuck there, then press the q (Q for quit). It will quit you from the situation and back you to the command line.

[Merge]
It allows to merge the other branch with the currently active branch.

[Push]
It upload local repository content to a remote repository.

[Remote]
It allows accessing the connection between remote and local.
Origin is the default name for the remote server, which is given by Git.

[Status]
It allows us to see the tracked, untracked files and changes.
